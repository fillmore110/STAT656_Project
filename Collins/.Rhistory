#complete_cases = TRUE - removes symbols that return an NA
stockPrices = tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
#Get Quantitative Data
startDate = "2016-01-01"
endDate = "2020-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices = tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
#require(caret)
#require(quantmod)
require(dplyr)
require(tidyverse)
require(tidyquant)
require(ggplot2)
require(reshape2)
require(dtw)
require(dtwclust)
require(TSclust)
rm(list=ls())
#Get Stock Index
stockIndex = tq_index("SP500")
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
returns <- tq_index('SP500') %>%
tq_get(from='2018-01-01', to='2020-12-31', verbose=T) %>%
group_by(symbol) %>%
tq_transmute(select=adjusted, mutate_fun=periodReturn, period='daily', type='log', col_rename='log_daily_returns') %>%
ungroup %>%
pivot_wider(names_from=date, values_from=log_daily_returns) %>%
drop_na\
returns <- tq_index('SP500') %>%
tq_get(from='2018-01-01', to='2020-12-31', verbose=T) %>%
group_by(symbol) %>%
tq_transmute(select=adjusted, mutate_fun=periodReturn, period='daily', type='log', col_rename='log_daily_returns') %>%
ungroup %>%
pivot_wider(names_from=date, values_from=log_daily_returns) %>%
drop_na\
returns <- tq_index('SP500') %>%
tq_get(from='2018-01-01', to='2020-12-31', verbose=T) %>%
group_by(symbol) %>%
tq_transmute(select=adjusted, mutate_fun=periodReturn, period='daily', type='log', col_rename='log_daily_returns') %>%
ungroup %>%
pivot_wider(names_from=date, values_from=log_daily_returns) %>%
drop_na
#Get Stock Index
stockIndex = tq_index("SP500")
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
#Get Quantitative Data
if (file.exists("StockData.Rdata")) {
load("StockData.Rdata")
} else {
startDate = "2019-01-01"
endDate = "2019-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices = tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
}
load("StockData.Rdata")
View(stockPrices)
dailyLogReturn <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='log_daily_returns') %>%
ungroup %>%
pivot_wider(names_from=date, values_from=log_daily_returns) %>%
drop_na
stockPrices2 <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='log_daily_returns') %>%
dailyLogReturn <- stockPrices %>% select(symbol,date, daily.returns) %>% spread(date,daily.returns) %>% drop_na()
stockPrices2 <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='log_daily_returns')
stockPrices2 <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='log_daily_returns') %>%
%>% select(symbol,date, daily.returns)
stockPrices2 <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='log_daily_returns') %>%
select(symbol,date, daily.returns)
stockPrices2 <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns)
stockPrices3 <- stockPrices2 %>%     ungroup %>%
pivot_wider(names_from=date, values_from=dailyreturns) %>%
drop_na
stockPrices4 <- stockPrices2 %>% spread(date,dailyreturns) %>% drop_na()
returns <-  stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn,
period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
distMatrix <- dist(returns[-1], method="DTW")
#Get Stock Index
stockIndex = tq_index("DOW") #SP500
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
startDate = "2019-01-01"
endDate = "2019-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices = tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
symbols <- sort(c("SPY","VGT","EFA","DBC","AGG"))
# Pipe them to getSymbols, extract the closing prices, and merge to one xts object.
# Take a look at result before moving on to calculate the returns.
# Notice that we are only grabbing prices from 2013 to present, but that is
# only to keep the loading time shorter for the post.
prices <-
getSymbols(symbols, src = 'google', from = "2013-01-01",
auto.assign = TRUE, warnings = FALSE) %>%
map(~Cl(get(.))) %>%
reduce(merge) %>%
`colnames<-`(symbols)
# Pipe them to getSymbols, extract the closing prices, and merge to one xts object.
# Take a look at result before moving on to calculate the returns.
# Notice that we are only grabbing prices from 2013 to present, but that is
# only to keep the loading time shorter for the post.
prices <-
getSymbols(symbols, src = 'yahoo', from = "2013-01-01",
auto.assign = TRUE, warnings = FALSE) %>%
map(~Cl(get(.))) %>%
reduce(merge) %>%
`colnames<-`(symbols)
View(prices)
View(stockIndex)
View(stockPrices)
View(prices)
stockPrices
#complete_cases = TRUE - removes symbols that return an NA
stockPrices <- tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
View(returns)
returns2<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(symbol,dailyreturns) %>%
as.xts(date_col=date)
View(returns)
View(stockPrices)
returns2 <- returns %>%  spread(symbol,dailyreturns) %>% as_xts(date_col = date)
returns2 <- returns %>%  spread(symbol,dailyreturns) %>% tk_xts(date_col = date)
require(timtk)
returns2 <- returns %>%  spread(symbol,dailyreturns) %>% tk_xts(date_col = date)
require(timetk)
returns2 <- returns %>%  spread(symbol,dailyreturns) %>% tk_xts(date_col = date)
View(returns)
View(returns)
returns2 <- returns %>%  spread(symbol) %>% tk_xts(date_col = date)
install.packages("timetk")
#require(caret)
#require(quantmod)
require(dplyr)
require(tidyverse)
require(tidyquant)
require(ggplot2)
require(reshape2)
require(dtw)
require(dtwclust)
require(TSclust)
require(timetk)
rm(list=ls())
returns2 <-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(symbol,dailyreturns) %>%
tk_xts(date_col=date)
#require(caret)
#require(quantmod)
require(dplyr)
require(tidyverse)
require(tidyquant)
require(ggplot2)
require(reshape2)
require(dtw)
require(dtwclust)
require(TSclust)
require(timetk)
rm(list=ls())
#Get Stock Index
stockIndex = tq_index("DOW") #SP500
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
#Get Quantitative Data
if (file.exists("StockData.Rdata")) {
load("StockData.Rdata")
} else {
startDate = "2019-01-01"
endDate = "2019-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices <- tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
}
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
returns2 <-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(symbol,dailyreturns) %>%
tk_xts(date_col=date)
View(stockPrices)
View(stockPrices)
View(stockPrices)
View(stockPrices)
View(returns2)
View(returns2)
View(returns2)
library(quantmod)
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
rm(list=ls())
tesla_data <- getSymbols("TSLA", auto.assign = FALSE)
head(tesla_data)
tail(tesla_data)
tesla_2019_data <- tesla_data["2019"]
combined_2019_data <- tesla_2019_data[, "TSLA.Close"]
for (symbol in symbols) {
symbol_data <- getSymbols(symbol, auto.assign = FALSE)
close_column <- paste(symbol, ".Close", sep = "")
symbol_2019_data <- symbol_data["2019", close_column]
combined_2019_data <- merge(combined_2019_data, symbol_2019_data, join = "left")
}
symbols <- c("F", "GM", "HMC", "TM", "DDAIF", "NSANY")
for (symbol in symbols) {
symbol_data <- getSymbols(symbol, auto.assign = FALSE)
close_column <- paste(symbol, ".Close", sep = "")
symbol_2019_data <- symbol_data["2019", close_column]
combined_2019_data <- merge(combined_2019_data, symbol_2019_data, join = "left")
}
head(combined_2019_data)
combined_2019_df <- data.frame(combined_2019_data)
combined_2019_df <- tibble::rownames_to_column(combined_2019_df, "Date")
combined_2019_df$Date <- as.Date(combined_2019_df$Date, format = "%Y-%m-%d")
head(combined_2019_df)
returns2 %>%
group_by(Symbol) %>%
summarize(`Standard Deviation of % Change` = sd(`dailyreturns`)) %>%
arrange(desc(`Standard Deviation of % Change`))
#require(caret)
#require(quantmod)
require(dplyr)
require(tidyverse)
require(tidyquant)
require(ggplot2)
require(reshape2)
require(dtw)
require(dtwclust)
require(TSclust)
require(timetk)
rm(list=ls())
#Get Stock Index
stockIndex = tq_index("SP500") #SP500
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
#Get Quantitative Data
if (file.exists("StockData.Rdata")) {
load("StockData.Rdata")
} else {
startDate = "2019-01-01"
endDate = "2019-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices <- tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
}
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
returns2 <-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(symbol,dailyreturns) %>%
tk_xts(date_col=date)
drop_na()
returns2 <-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date, dailyreturns) %>%
spread(symbol,dailyreturns) %>%
tk_xts(date_col=date)
returns2 %>%
group_by(Symbol) %>%
summarize(`Standard Deviation of % Change` = sd(`dailyreturns`)) %>%
arrange(desc(`Standard Deviation of % Change`))
returns %>%
group_by(Symbol) %>%
summarize(`Standard Deviation of % Change` = sd(`dailyreturns`)) %>%
arrange(desc(`Standard Deviation of % Change`))
View(stockIndex)
View(returns)
returns[1]
returns[,1]
ggplot(SPYRet, aes(x = index, y = value, color = series)) +
geom_line() +
theme_bw() +
labs(title = "SPY Returns Returns from 2007 to 2017", x = "")
ggplot(dailyreturns, aes(x = index, y = value, color = series)) +
geom_line() +
theme_bw() +
labs(title = "SPY Returns Returns from 2007 to 2017", x = "")
ggplot(returns, aes(x = index, y = value, color = series)) +
geom_line() +
theme_bw() +
labs(title = "SPY Returns Returns from 2007 to 2017", x = "")
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
View(returns)
View(returns)
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns')
View(returns)
View(returns)
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date,dailyreturns)
#%>%
# spread(date,dailyreturns) %>%
#drop_na()
View(returns)
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date,dailyreturns) %>%
spread(date,dailyreturns) %>%
drop_na()
returns2<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='dailyreturns') %>%
select(symbol,date,dailyreturns)
View(returns)
View(returns2)
volatility <- returns %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
View(returns)
volatility <- returns[-1] %>%
group_by(symbol) %>%
summarise(mean = mean(returns[-1]),
sd = sd(returns[-1]))
volatility <- returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns2),
sd = sd(returns2))
netflix <- tq_get("NFLX",
from = '2009-01-01',
to = "2018-03-01",
get = "stock.prices")
netflix_daily_returns <- netflix %>%
tq_transmute(select = adjusted,           # this specifies which column to select
mutate_fun = periodReturn,   # This specifies what to do with that column
period = "daily",      # This argument calculates Daily returns
col_rename = "nflx_returns") # renames the column
View(netflix_daily_returns)
tickers <- c("FB", "AMZN", "AAPL", "NFLX", "GOOG")
multpl_stocks <- tq_get(tickers,
from = "2013-01-01",
to = "2018-03-01",
get = "stock.prices")
multpl_stock_daily_returns <- multpl_stocks %>%
group_by(symbol) %>%                            # We are grouping the stocks by the stock symbol
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = 'daily',
col_rename = 'returns')
View(multpl_stock_daily_returns)
multpl_stock_daily_returns %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
multpl_stockVol<-multpl_stock_daily_returns %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
View(multpl_stockVol)
View(multpl_stocks)
View(multpl_stock_daily_returns)
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='returns') %>%
select(symbol,date,returns) %>%
spread(date,returns) %>%
drop_na()
View(multpl_stocks)
returns2<-stockPrices %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
type = "log",
col_rename='returns')
View(returns2)
volatility <- returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns2),
sd = sd(returns2))
multpl_stock_daily_returns
returns2
multpl_stockVol<-returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
volat<-returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
View(volat)
View(volat)
volat<-returns2 %>%
mutate(year = year(date)) %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
View(volat)
volat<-returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
volat2<-returns2 %>%
mutate(year = year(date)) %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
View(volat2)
View(volat)
multpl_stock_monthly_returns %>%
spread(symbol, value = returns) %>%
tk_xts(silent = TRUE) %>%
cov()
multpl_stock_daily_returns %>%
spread(symbol, value = returns) %>%
tk_xts(silent = TRUE) %>%
cov()
#require(caret)
#require(quantmod)
require(dplyr)
require(tidyverse)
require(tidyquant)
require(ggplot2)
require(reshape2)
require(dtw)
require(dtwclust)
require(TSclust)
require(timetk)
rm(list=ls())
#Get Stock Index
stockIndex = tq_index("SP500") #SP500
#Fix stock symbols
stockIndex$symbolFixed = gsub("\\.", "-",stockIndex$symbol)
#Get Quantitative Data
if (file.exists("StockData.Rdata")) {
load("StockData.Rdata")
} else {
startDate = "2019-01-01"
endDate = "2019-12-31"
#complete_cases = TRUE - removes symbols that return an NA
stockPrices <- tq_get(stockIndex$symbolFixed, get = "stock.prices", from = startDate, to =endDate, complete_cases = TRUE )
save(stockPrices, file="StockData.Rdata")
}
returns<-stockPrices %>%
group_by(symbol) %>%
tq_mutate(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log", col_rename='returns') %>%
select(symbol,date,returns) %>%
spread(date,returns) %>%
drop_na()
returns2<-stockPrices %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
type = "log",
col_rename='returns')
volat<-returns2 %>%
group_by(symbol) %>%
summarise(mean = mean(returns),
sd = sd(returns))
distMatrix <- dist(returns[-1], method="DTW")
